{"follower1_model":"RecurrentQNetwork(\n  (feature_extractor): Sequential(\n    (0): Linear(in_features=4, out_features=64, bias=True)\n    (1): LeakyReLU(negative_slope=0.01)\n    (2): Linear(in_features=64, out_features=64, bias=True)\n    (3): LeakyReLU(negative_slope=0.01)\n  )\n  (lstm): LSTM(64, 64, batch_first=True)\n  (output_layer): Linear(in_features=64, out_features=5, bias=True)\n)","follower2_model":"RecurrentQNetwork(\n  (feature_extractor): Sequential(\n    (0): Linear(in_features=4, out_features=64, bias=True)\n    (1): LeakyReLU(negative_slope=0.01)\n    (2): Linear(in_features=64, out_features=64, bias=True)\n    (3): LeakyReLU(negative_slope=0.01)\n  )\n  (lstm): LSTM(64, 64, batch_first=True)\n  (output_layer): Linear(in_features=64, out_features=5, bias=True)\n)","_wandb":{"runtime":0},"leader_model":"RecurrentQNetwork(\n  (feature_extractor): Sequential(\n    (0): Linear(in_features=4, out_features=64, bias=True)\n    (1): LeakyReLU(negative_slope=0.01)\n    (2): Linear(in_features=64, out_features=64, bias=True)\n    (3): LeakyReLU(negative_slope=0.01)\n  )\n  (lstm): LSTM(64, 64, batch_first=True)\n  (output_layer): Linear(in_features=64, out_features=5, bias=True)\n)"}